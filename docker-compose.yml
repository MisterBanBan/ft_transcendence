services:
  users:
    image: users
    container_name: users
    build:
      context: api/users
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
#    env_file:
#      - ".env"
    ports:
      - "8080:8080"
#    volumes:
#      - ./src:/app/src
    networks:
      ft_transcendence:
        aliases:
          - users-service
    restart: unless-stopped

#  tournament:
#    image: tournament
#    container_name: tournament
#    build:
#      context: api/tournament
#    env_file:
#      - ".env"
#    networks:
#      - ft_transcendence
#    restart: on-failure

#  game:
#    image: game
#    container_name: game
#    build:
#      context: api/game
#    env_file:
#      - ".env"
#    networks:
#      - ft_transcendence
#    restart: on-failure

#  matchmaking:
#    image: matchmaking
#    container_name: matchmaking
#    build:
#      context: api/matchmaking
#    env_file:
#      - ".env"
#    networks:
#      - ft_transcendence
#    restart: on-failure

#  authentication:
#    image: authentication
#    container_name: authentication
#    build:
#      context: api/authentication
#    env_file:
#      - ".env"
#    networks:
#      - ft_transcendence
#    restart: on-failure

  nginx:
    image: nginx
    container_name: nginx
    build:
      context: api/nginx
#    env_file:
#      - ".env"
    ports:
      - "8443:443"
    depends_on:
      users:
        condition: service_healthy
    networks:
      - ft_transcendence
    restart: on-failure

networks:
  ft_transcendence:
      driver: bridge

#volumes:
#  nginx-data:
#    driver: local
##  authentication-data:
##    driver: local
##  matchmaking-data:
##    driver: local
##  game-data:
##    driver: local
##  tournament-data:
##    driver: local
#  users-data:
#    driver: local

