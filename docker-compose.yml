services:
  Users:
    image: users
    container_name: Users
    build:
      context: services/Users
#    env_file:
#      - ".env"
    networks:
      - ft_transcendence
    restart: on-failure

#  Tournament:
#    image: tournament
#    container_name: Tournament
#    build:
#      context: services/Tournament
#    env_file:
#      - ".env"
#    networks:
#      - ft_transcendence
#    restart: on-failure

#  Game:
#    image: game
#    container_name: Game
#    build:
#      context: services/Game
#    env_file:
#      - ".env"
#    networks:
#      - ft_transcendence
#    restart: on-failure

#  Matchmaking:
#    image: matchmaking
#    container_name: Matchmaking
#    build:
#      context: services/Matchmaking
#    env_file:
#      - ".env"
#    networks:
#      - ft_transcendence
#    restart: on-failure

#  Authentification:
#    image: authentification
#    container_name: Authentification
#    build:
#      context: services/Authentification
#    env_file:
#      - ".env"
#    networks:
#      - ft_transcendence
#    restart: on-failure

  Nginx:
    image: nginx
    container_name: Nginx
    build:
      context: services/Nginx
#    env_file:
#      - ".env"
    ports:
      - "3000:3000"
    depends_on:
      - Users
#      - Matchmaking
#      - Authentification
#      - Game
#      - Tournament
    networks:
      - ft_transcendence
    restart: on-failure

networks:
  ft_transcendence:
      driver: bridge

#volumes:
#  Nginx-data:
#    driver: local
##  Authentification-data:
##    driver: local
##  Matchmaking-data:
##    driver: local
##  Game-data:
##    driver: local
##  Tournament-data:
##    driver: local
#  Users-data:
#    driver: local

