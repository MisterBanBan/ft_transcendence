services:
  users:
    image: users
    container_name: users
    build:
      context: api/users/
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - ft_transcendence
    volumes:
      - users-data:/app/database
    restart: unless-stopped

  tournament:
    image: tournament
    container_name: tournament
    build:
      context: api/tournament/
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - ft_transcendence
    volumes:
      - tournament-data:/app/database
    restart: unless-stopped

  game:
    image: game
    container_name: game
    build:
      context: api/game
    healthcheck:
      test: [ "CMD-SHELL", "curl -kf https://localhost:8082/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - ft_transcendence
    volumes:
      - game-data:/app/database
    restart: on-failure

  matchmaking:
    image: matchmaking
    container_name: matchmaking
    ports:
      - "8083:8083"
    build:
      context: api/matchmaking
    healthcheck:
      test: [ "CMD-SHELL", "curl -kf https://localhost:8083/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - ft_transcendence
    volumes:
      - matchmaking-data:/app/database
    restart: on-failure

  auth:
    image: auth
    container_name: auth
    build:
      context: api/auth
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8084/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - ft_transcendence
    volumes:
      - auth-data:/app/database
    restart: on-failure

  nginx:
    image: nginx
    container_name: nginx
    build:
      context: api/nginx
    ports:
      - "8443:443"
    depends_on:
      users:
        condition: service_healthy
      tournament:
        condition: service_healthy
      matchmaking:
        condition: service_healthy
      game:
        condition: service_healthy
      auth:
        condition: service_healthy
    networks:
      - ft_transcendence
    restart: on-failure

networks:
  ft_transcendence:
    driver: bridge

volumes:
  users-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./api/users/database
  auth-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./api/auth/database
  matchmaking-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./api/matchmaking/database
  game-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./api/game/database
  tournament-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./api/tournament/database


