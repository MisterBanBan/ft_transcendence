daemon off;

events {}

http {
	server {
<<<<<<< HEAD
		server_name localhost;
		listen 80;
		return 301 https://$host$request_uri;
	}

	server {
=======
>>>>>>> main
# 		resolver 127.0.0.11 valid=10s;
		include				mime.types;
		listen				443 ssl;
		server_name			localhost;
<<<<<<< HEAD
		ssl_certificate		/etc/nginx/ssl/certificate.crt;
=======
		ssl_certificate		/etc/nginx/ssl/cert.crt;
>>>>>>> main
		ssl_certificate_key	/etc/nginx/ssl/key.key;
		ssl_protocols		TLSv1.2 TLSv1.3;
		root                /usr/share/nginx/front;
	    index               index.html;

	    # Main route for frontend
	    location / {
	        try_files $uri $uri/ /index.html;
	    }

<<<<<<< HEAD
	    # users service proxy
		location /api/users/ {
            proxy_pass http://users:8080/api/users/;
=======
        location /api/ {
            proxy_pass https://gateway:3000;
>>>>>>> main
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_read_timeout 60s;
        }

<<<<<<< HEAD
	    # tournament service proxy
		location /api/tournament/ {
            proxy_pass http://tournament:8081/api/tournament/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_read_timeout 60s;
        }

	    # game service proxy
		location /api/game/ {
            proxy_pass http://game:8082/api/game/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_read_timeout 60s;
        }
#
# 	    # matchmaking service proxy
		location /api/matchmaking/ {
            proxy_pass http://matchmaking:8083/api/matchmaking/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_read_timeout 60s;
        }

        location /api/auth/ {
            proxy_pass http://auth:8084/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_read_timeout 60s;
        }

	    # Error handling
	    error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/front/error_page;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/front/error_page;
        }
	}
=======
		location /uploads/ {
            alias /usr/share/nginx/front/uploads/;
            try_files $uri $uri/ =404;
        }
    }
>>>>>>> main
}